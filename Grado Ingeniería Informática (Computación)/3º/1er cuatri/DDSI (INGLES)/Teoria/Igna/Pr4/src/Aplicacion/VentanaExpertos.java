/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacion;

import Persistencia.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.*;
import javax.swing.JTable;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Clase para el manejo de la ventana de Expertos
 * @author Ignacio Andreu Orta
 */
public final class VentanaExpertos extends javax.swing.JFrame {

    private static conexionOracle conn;
    private manejaExperto mExp;
    private DefaultTableModel modeloTExpertos = new DefaultTableModel();
    
/**
 * Constructor de la clase
 * @param c conexión con Oracle
 * @throws SQLException si ocurre alguna anomalía
 */
    public VentanaExpertos(conexionOracle c)throws SQLException{

        mExp = new manejaExperto(c);
        initComponents();
        dibujarTablaExpertos();
        pideExpertos();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
    /**
     * Crea una lista de expertos rellenada con los de la BD y se la pasa como parámetro a rellenarTablaExpertos
     * @throws SQLException si ocurre alguna anomalía
     */
    public void pideExpertos() throws SQLException{
        ArrayList<experto> lExp = mExp.listaExpertos();
        rellenarTablaExpertos(lExp);
    }
    
    /**
     * Crea una lista de expertos rellenada con los de la BD filtrados por el país indicado y se la pasa como 
     * parámetro a rellenarTablaExpertos
     * @throws SQLException si ocurre alguna anomalía
     */
    public void pideExpertosPorPais() throws SQLException{
        String paisBuscado = buscadorPais.getText();
        ArrayList<experto> lExp = mExp.listaExpertosPorPais(paisBuscado);
        rellenarTablaExpertos(lExp);
    }
    
    /**
     * Vacía la tabla de expertos de la ventana.
     */
    public void vaciarTablaExpertos(){
        while(modeloTExpertos.getRowCount() > 0)
            modeloTExpertos.removeRow(0);
    }

    /**
     * Rellena la tabla de la ventana con los expertos pasados por parámetro
     * @param expertos lista de expertos con los que rellenar la tabla
     */
    public void rellenarTablaExpertos(ArrayList<experto> expertos){
        Object[] columna = new Object[5];
        int numRegistros = expertos.size();
        for (int i = 0; i < numRegistros; i++) 
        {
            columna[0] = expertos.get(i).getCodExperto();
            columna[1] = expertos.get(i).getNombre();
            columna[2] = expertos.get(i).getPais();
            columna[3] = expertos.get(i).getSexo();
            columna[4] = expertos.get(i).getEspecialidad();
            modeloTExpertos.addRow(columna);
        }
    }
     
    /**
     * 
     */
    public void dibujarTablaExpertos() {
       
       jExperto.setModel(modeloTExpertos);
       String[] columnasTabla = {"Código","Nombre","País","Sexo","Especialidad"};
       modeloTExpertos.setColumnIdentifiers(columnasTabla);
   
        jExperto.getTableHeader().setResizingAllowed(false);
    
        jExperto.getColumnModel().getColumn(0).setPreferredWidth(25);
        jExperto.getColumnModel().getColumn(1).setPreferredWidth(140);
        jExperto.getColumnModel().getColumn(2).setPreferredWidth(80);
        jExperto.getColumnModel().getColumn(3).setPreferredWidth(8);
        jExperto.getColumnModel().getColumn(4).setPreferredWidth(122);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jExperto = new javax.swing.JTable();
        buscadorPais = new javax.swing.JTextField();
        etiquetaPais = new javax.swing.JLabel();
        botonFiltrarPais = new javax.swing.JButton();
        botonListarTodo = new javax.swing.JButton();
        etiquetaTitulo = new javax.swing.JLabel();
        etiquetaSexo = new javax.swing.JLabel();
        botonContador = new javax.swing.JButton();
        buscadorSexo = new javax.swing.JTextField();
        etiquetaContar = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jExperto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jExperto);

        etiquetaPais.setText("País");

        botonFiltrarPais.setText("Filtrar por país");
        botonFiltrarPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFiltrarPaisActionPerformed(evt);
            }
        });

        botonListarTodo.setText("Listar todos");
        botonListarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarTodoActionPerformed(evt);
            }
        });

        etiquetaTitulo.setText("Gestion de Expertos");

        etiquetaSexo.setText("Sexo");

        botonContador.setText("Contar");
        botonContador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonContadorActionPerformed(evt);
            }
        });

        etiquetaContar.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etiquetaPais)
                                    .addComponent(etiquetaSexo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buscadorPais, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonFiltrarPais)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonListarTodo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buscadorSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(botonContador)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(etiquetaContar))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(etiquetaTitulo)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(etiquetaTitulo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscadorPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaPais)
                    .addComponent(botonFiltrarPais)
                    .addComponent(botonListarTodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonContador)
                    .addComponent(buscadorSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaSexo)
                    .addComponent(etiquetaContar))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo activado al accionar el boton Listar Todo que muestra todos los expertos en la ventana
     * @param evt 
     */
    private void botonListarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarTodoActionPerformed
        try {
            this.vaciarTablaExpertos();
            this.pideExpertos();
        } catch (SQLException ex) {
            Logger.getLogger(VentanaExpertos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonListarTodoActionPerformed

    /**
     * Metodo activado al pulsar el botón Filtrar por pais que muestra los expertos del país 
     * indicado en la barra de búsqueda
     * @param evt 
     */
    private void botonFiltrarPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFiltrarPaisActionPerformed
        try{
            this.vaciarTablaExpertos();
            this.pideExpertosPorPais();
        }catch (SQLException ex) {
            Logger.getLogger(VentanaExpertos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonFiltrarPaisActionPerformed

    public void pideSexo() throws SQLException{
        String sexoBuscado = buscadorSexo.getText();
        char SexoSelec = sexoBuscado.charAt(0);
        int num;
            num = mExp.sexoExperto(sexoBuscado);
        //if(buscadorSexo.getText().equals("F"))
        if(SexoSelec == 'F')
            etiquetaContar.setText("Hay " + num + " mujeres en la BD");
        else if(SexoSelec == 'M')
            etiquetaContar.setText("Hay " + num + " hombres en la BD");
        etiquetaContar.setVisible(true);
    }
    /**
     * Metodo que al escribir un sexo en el campo de busqueda y pulsar el botón Contador
     * muestre el numero de expertos de ese sexo por pantalla
     * @param evt 
     */
    private void botonContadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonContadorActionPerformed
        try {
           // TODO add your handling code here:
           pideSexo();
       } catch (SQLException ex) {
          JOptionPane.showMessageDialog(null, "Error at Count: "+ex.getMessage());
       }
    }//GEN-LAST:event_botonContadorActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonContador;
    private javax.swing.JButton botonFiltrarPais;
    private javax.swing.JButton botonListarTodo;
    private javax.swing.JTextField buscadorPais;
    private javax.swing.JTextField buscadorSexo;
    private javax.swing.JLabel etiquetaContar;
    private javax.swing.JLabel etiquetaPais;
    private javax.swing.JLabel etiquetaSexo;
    private javax.swing.JLabel etiquetaTitulo;
    private javax.swing.JTable jExperto;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
