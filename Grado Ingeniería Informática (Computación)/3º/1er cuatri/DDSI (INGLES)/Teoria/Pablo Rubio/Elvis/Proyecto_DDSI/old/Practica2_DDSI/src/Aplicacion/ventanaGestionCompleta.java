/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacion;

import Persistencia.caso;
import Persistencia.conexionOracle;
import Persistencia.experto;
import Persistencia.colabora;
import Persistencia.manejaCaso;
import Persistencia.manejaColabora;
import Persistencia.manejaExperto;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jesus
 */
public class ventanaGestionCompleta extends javax.swing.JFrame {

    /**
     * Creates new form ventanaGestionCompleta
     */
    
    private manejaExperto mExp;
    private manejaCaso mCa=null;
    private manejaColabora mCo=null;
    experto exp=null;
    conexionOracle co;
    
    
    
     DefaultTableModel modeloTExpertos = new DefaultTableModel() {

    public boolean isCellEditable(int row, int column) {
        return false;
    }
};
      DefaultTableModel modeloTCasos = new DefaultTableModel() {

    public boolean isCellEditable(int row, int column) {
        return false;
    }
};
       DefaultTableModel modeloTColaboraciones = new DefaultTableModel() {

    public boolean isCellEditable(int row, int column) {
        return false;
    }
};
      
    
    
    public ventanaGestionCompleta(conexionOracle co) {
        this.co=co;
        mExp=new manejaExperto(co);
        mCo = new manejaColabora(co);
        mCa = new manejaCaso(co);
        initComponents();
        DibujarTablaColaboraciones();
        DibujarTablaCasos();
        DibujarTablaExpertos();
        txtCodCasoColabora.setEditable(false);
        txtCodExpertoColabora.setEditable(false);
      //  InsertaExperto.setEnabled(false);
    }
    
    
    

    private ventanaGestionCompleta() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        InsertaExperto = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtPais = new javax.swing.JTextField();
        txtSexo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCodigoCaso = new javax.swing.JTextField();
        txtNombreCaso = new javax.swing.JTextField();
        InsertarCasoPolicial = new javax.swing.JButton();
        ListarTodo = new javax.swing.JToggleButton();
        LimpiarTodo = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tExpertos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tCasos = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        EliminarExperto = new javax.swing.JButton();
        EliminarCaso = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtCodExpertoColabora = new javax.swing.JTextField();
        txtCodCasoColabora = new javax.swing.JTextField();
        InsertaColaboracion = new javax.swing.JButton();
        txtDescripcion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tColaboraciones = new javax.swing.JTable();
        EliminarColaboracion = new javax.swing.JButton();
        CalendarioIni = new com.toedter.calendar.JDateChooser();
        CalendarioFin = new com.toedter.calendar.JDateChooser();
        txtFechaIncorporacion = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Código");

        jLabel2.setText("Nombre");

        jLabel3.setText("País");

        jLabel4.setText("Sexo");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        InsertaExperto.setText("Insertar Experto");
        InsertaExperto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                InsertaExpertoItemStateChanged(evt);
            }
        });
        InsertaExperto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertaExpertoActionPerformed(evt);
            }
        });

        txtPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaisActionPerformed(evt);
            }
        });

        jLabel5.setText("Especialidad");

        txtEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEspecialidadActionPerformed(evt);
            }
        });

        jLabel6.setText("Código");

        jLabel7.setText("Nombre");

        jLabel8.setText("Fecha de inicio");

        jLabel9.setText("Fecha final");

        txtNombreCaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreCasoActionPerformed(evt);
            }
        });

        InsertarCasoPolicial.setText("Insertar Caso Policial");
        InsertarCasoPolicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarCasoPolicialActionPerformed(evt);
            }
        });

        ListarTodo.setText("Listar Todo");
        ListarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarTodoActionPerformed(evt);
            }
        });

        LimpiarTodo.setText("Limpiar Todo");
        LimpiarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarTodoActionPerformed(evt);
            }
        });

        jLabel10.setText("Listado de Expertos");

        tExpertos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tExpertos);

        tCasos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tCasos);

        jLabel11.setText("Listado de Casos Policiales");

        EliminarExperto.setText("Eliminar Experto");
        EliminarExperto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarExpertoActionPerformed(evt);
            }
        });

        EliminarCaso.setText("Eliminar Caso");
        EliminarCaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarCasoActionPerformed(evt);
            }
        });

        jLabel12.setText("Código del Experto");

        jLabel13.setText("Código del Caso");

        jLabel14.setText("Fecha de Incorporación");

        jLabel15.setText("Descripción");

        InsertaColaboracion.setText("Insertar Colaboración");
        InsertaColaboracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertaColaboracionActionPerformed(evt);
            }
        });

        jLabel16.setText("Listado de Colaboraciones");

        tColaboraciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tColaboraciones);

        EliminarColaboracion.setText("Eliminar Colaboración");
        EliminarColaboracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarColaboracionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(227, 227, 227)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(215, 215, 215)
                                .addComponent(EliminarExperto))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCodExpertoColabora, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(InsertaColaboracion, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCodCasoColabora, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFechaIncorporacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(23, 23, 23)
                                        .addComponent(txtEspecialidad))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(44, 44, 44)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                                                .addGap(18, 18, 18)
                                                .addComponent(InsertaExperto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtNombre)
                                            .addComponent(txtPais)
                                            .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCodigoCaso, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(InsertarCasoPolicial))
                                    .addComponent(txtNombreCaso, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CalendarioIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LimpiarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ListarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(30, 30, 30))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CalendarioFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(166, 166, 166)
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(EliminarCaso)
                                    .addGap(165, 165, 165)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(181, 181, 181)
                                        .addComponent(jLabel16))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(165, 165, 165)
                                        .addComponent(EliminarColaboracion)))
                                .addGap(146, 146, 146)))
                        .addGap(57, 57, 57))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InsertaExperto)
                    .addComponent(jLabel6)
                    .addComponent(txtCodigoCaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InsertarCasoPolicial)
                    .addComponent(ListarTodo))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtNombreCaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(LimpiarTodo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(CalendarioIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(CalendarioFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EliminarExperto)
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtCodExpertoColabora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InsertaColaboracion))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodCasoColabora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(txtFechaIncorporacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(EliminarCaso)
                                .addGap(41, 41, 41))
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EliminarColaboracion)))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    
    private experto RecogerDatos()
    {
        experto ex = null;
        String Nombre,Codigo,Pais,Sexo,Especialidad;
        
        Codigo=txtCodigo.getText();
        Nombre=txtNombre.getText();
        Pais=txtPais.getText();
        Sexo=txtSexo.getText();
        Sexo=""+Sexo.charAt(0);//Cojo la primera letra
        Especialidad=txtEspecialidad.getText();
        
        if(Codigo!=null && Nombre!=null && Pais!=null && Sexo!=null && Especialidad!=null)
        {
           // InsertaExperto.setEnabled(true);
            ex=new experto(Codigo,Nombre,Pais,Sexo,Especialidad);
        }
        return ex;
    }

    
    
    private void InsertaExpertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertaExpertoActionPerformed
        // TODO add your handling code here:
        
        try {
            boolean insertado=false;
            insertado=mExp.insertaExperto(RecogerDatos());
            if(insertado==true)
                JOptionPane.showMessageDialog(null, "Se ha insertado un nuevo Experto. ");
            else
                JOptionPane.showMessageDialog(null, "No s epueod insertar un nuevo Experto. ");
                
        } catch (SQLException ex) {
            System.out.println("\nExcepcion en Inserta Experto. ");
            JOptionPane.showMessageDialog(null, "Error en Inserta Experto: "+ex.getMessage());
        }
 
    }//GEN-LAST:event_InsertaExpertoActionPerformed

    private void txtPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaisActionPerformed

    private void txtEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEspecialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEspecialidadActionPerformed

    private void InsertaExpertoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_InsertaExpertoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_InsertaExpertoItemStateChanged

    private void txtNombreCasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreCasoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreCasoActionPerformed

    private void EliminarExpertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarExpertoActionPerformed
        // TODO add your handling code here:
        
        int respuesta=JOptionPane.showConfirmDialog(EliminarExperto,"¿Esta seguro de que desea elimnar el experto?","Eliminar un Experto",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(respuesta==0)//SI 
        {
            String eliminar=tExpertos.getValueAt(tExpertos.getSelectedRow(),0).toString();
            boolean eliminado;
            DefaultTableModel dtm = (DefaultTableModel) tExpertos.getModel(); //TableProducto es el nombre de mi tabla ;) 
            dtm.removeRow(tExpertos.getSelectedRow()); //lo quita de la tabla
            ///ELIMINAR DE LA BD
            System.out.println("codExperto: "+eliminar);
            try {
                eliminado=mExp.eliminarExperto(eliminar);
                if(eliminado==true)
                {
                    System.out.println("Se ha eliminado un nuevo Experto. ");
                    JOptionPane.showMessageDialog(null, "Se ha eliminado un nuevo Experto. ");
                } 
                else
                {
                    System.out.println("No se ha podido eliminar un nuevo Experto");
                    JOptionPane.showMessageDialog(null, "No se ha podido eliminar un nuevo Experto");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al Eliminar un Experto: "+ex.getMessage());
               // Logger.getLogger(ventanaGestionCompleta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
             JOptionPane.showMessageDialog(null, "No se ha eliminado el experto. ");
        }
        
        
        
        
    }//GEN-LAST:event_EliminarExpertoActionPerformed

    private void InsertarCasoPolicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarCasoPolicialActionPerformed
        // TODO add your handling code here:
        String fi,ff,CodCa,nom;
        boolean insertado=false;
        CodCa=txtCodigoCaso.getText();
        nom=txtNombreCaso.getText();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yy");
        
        if(CalendarioIni.getDate().after(CalendarioFin.getDate())==true)//Si el ini es despues que el fin
        {
            JOptionPane.showMessageDialog(null, "No se ha podido insertar un nuevo Caso. LA FECHA INICIAL ES ANTERIOR A LA FINAL. ");
        }
        else
        {
            fi=formatter.format(CalendarioIni.getDate());
            ff=formatter.format(CalendarioFin.getDate());



            System.out.println("fi: "+fi+" ff: "+ff);
            caso ca=new caso(CodCa, nom, fi, ff);

            try {

                try {
                   insertado=mCa.insertaCaso(ca);
                } catch (ParseException ex) {
                     JOptionPane.showMessageDialog(null, "Error en Inserta Caso: "+ex.getMessage());
                }

                if(insertado==true)
                {
                    System.out.println("Se ha insertado un nuevo Caso. ");
                    JOptionPane.showMessageDialog(null, "Se ha insertado un nuevo Caso. ");
                } 
                else
                {
                    System.out.println("No se ha podido insertar un nuevo Caso. ");
                    JOptionPane.showMessageDialog(null, "No se ha podido insertar un nuevo Caso. ");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al Insertar un Caso: "+ex.getMessage());
               // Logger.getLogger(ventanaGestionCompleta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_InsertarCasoPolicialActionPerformed

    
    
    private void DibujarTablaExpertos() {
        tExpertos.setModel(modeloTExpertos);
        String[] columnasTabla = {"Código","Nombre","País","Sexo","Especialidad"};
        modeloTExpertos.setColumnIdentifiers(columnasTabla);
        // Para no permitir el redimensionamiento de las columnas con el ratón
        tExpertos.getTableHeader().setResizingAllowed(false);
        // Así se fija el ancho de las columnas
        tExpertos.getColumnModel().getColumn(0).setPreferredWidth(40);
        tExpertos.getColumnModel().getColumn(1).setPreferredWidth(140);
        tExpertos.getColumnModel().getColumn(2).setPreferredWidth(80);
        tExpertos.getColumnModel().getColumn(3).setPreferredWidth(10);
        tExpertos.getColumnModel().getColumn(4).setPreferredWidth(122);
}
    
private void rellenarTablaExpertos (ArrayList<experto> expertos) {
    Object[] columna = new Object[5];
    int numRegistros = expertos.size();
    for (int i = 0; i < numRegistros; i++) {
        columna[0] = expertos.get(i).getCodExperto();
        columna[1] = expertos.get(i).getNombre();
        columna[2] = expertos.get(i).getPais();
        columna[3] = expertos.get(i).getSexo();
        columna[4] = expertos.get(i).getEspecialidad();
        modeloTExpertos.addRow(columna);
    }
}

 private void DibujarTablaCasos() {
        tCasos.setModel(modeloTCasos);
        String[] columnasTabla = {"Código","Nombre","Fecha Inicio","Fecha Fin"};
        modeloTCasos.setColumnIdentifiers(columnasTabla);
        // Para no permitir el redimensionamiento de las columnas con el ratón
        tCasos.getTableHeader().setResizingAllowed(false);
        // Así se fija el ancho de las columnas
        tCasos.getColumnModel().getColumn(0).setPreferredWidth(25);
        tCasos.getColumnModel().getColumn(1).setPreferredWidth(140);
        tCasos.getColumnModel().getColumn(2).setPreferredWidth(100);
        tCasos.getColumnModel().getColumn(3).setPreferredWidth(100);
}
    
private void rellenarTablaCasos (ArrayList<caso> caso) {
    Object[] columna = new Object[5];
    int numRegistros = caso.size();
    for (int i = 0; i < numRegistros; i++) {
        columna[0] = caso.get(i).getCodCaso();
        columna[1] = caso.get(i).getNombre();
        columna[2] = caso.get(i).getFechaInicio();
        columna[3] = caso.get(i).getFechaFin();
        modeloTCasos.addRow(columna);
    }
}

private void DibujarTablaColaboraciones() {
        tColaboraciones.setModel(modeloTColaboraciones);
        String[] columnasTabla = {"Experto","Caso","Fecha","Descripción"};
        modeloTColaboraciones.setColumnIdentifiers(columnasTabla);
        // Para no permitir el redimensionamiento de las columnas con el ratón
        tColaboraciones.getTableHeader().setResizingAllowed(false);
        // Así se fija el ancho de las columnas
        tColaboraciones.getColumnModel().getColumn(0).setPreferredWidth(25);
        tColaboraciones.getColumnModel().getColumn(1).setPreferredWidth(25);
        tColaboraciones.getColumnModel().getColumn(2).setPreferredWidth(100);
        tColaboraciones.getColumnModel().getColumn(3).setPreferredWidth(122);
}
    
private void rellenarTablaColaboraciones (ArrayList<colabora> colaboraciones) {
    Object[] columna = new Object[5];
    int numRegistros = colaboraciones.size();
    for (int i = 0; i < numRegistros; i++) {
        columna[0] = colaboraciones.get(i).getCodExperto();
        columna[1] = colaboraciones.get(i).getCodCaso();
        columna[2] = colaboraciones.get(i).getFecha();
        columna[3] = colaboraciones.get(i).getDescripcionColaboracion();
        modeloTColaboraciones.addRow(columna);
    }
}
        
    private void vaciarTablas()
    {
        int i = modeloTExpertos.getRowCount();
        while (modeloTExpertos.getRowCount() > 0)
        modeloTExpertos.removeRow(0);
        
        int j = modeloTCasos.getRowCount();
        while (modeloTCasos.getRowCount() > 0)
        modeloTCasos.removeRow(0);

        int k = modeloTColaboraciones.getRowCount();
        while (modeloTColaboraciones.getRowCount() > 0)
        modeloTColaboraciones.removeRow(0);
    }
    
    private void vaciarTextos()
    {
        txtNombre.setText(null);
        txtCodExpertoColabora.setText(null);
        txtCodCasoColabora.setText(null);
        txtCodigo.setText(null);
        txtCodigoCaso.setText(null);
        txtDescripcion.setText(null);
        txtEspecialidad.setText(null);
        txtFechaIncorporacion.setDate(null);
        CalendarioIni.setDate(null);
        CalendarioFin.setDate(null);
        txtNombreCaso.setText(null);
        txtPais.setText(null);
        txtSexo.setText(null);
    }
    
    
    private void pideExpertos() throws SQLException {
    ArrayList<experto> lExp = mExp.listaExpertos();
    rellenarTablaExpertos (lExp);
}

    private void pideCasos() throws SQLException {
    ArrayList<caso> lCa = mCa.listaCasos();
    rellenarTablaCasos (lCa);
}
    
    private void pideColaboraciones() throws SQLException {
    ArrayList<colabora> lCo = mCo.listaColaboraciones();
    rellenarTablaColaboraciones (lCo);
}

    
    private void ListarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarTodoActionPerformed
        // TODO add your handling code here:
        vaciarTablas();
        try {
            pideExpertos();
            pideCasos();
            pideColaboraciones();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Listar las tablas: "+ex.getMessage());
        }
    }//GEN-LAST:event_ListarTodoActionPerformed

    private void LimpiarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarTodoActionPerformed
        // TODO add your handling code here:
        vaciarTablas();
        vaciarTextos();
    }//GEN-LAST:event_LimpiarTodoActionPerformed

    private void EliminarCasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarCasoActionPerformed
        // TODO add your handling code here:
        
        int respuesta=JOptionPane.showConfirmDialog(EliminarCaso,"¿Esta seguro de que desea eliminar el caso?","Eliminar un Caso",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(respuesta==0)//SI 
        {
            String eliminar=tCasos.getValueAt(tCasos.getSelectedRow(),0).toString();
            boolean eliminado;
            DefaultTableModel dtm = (DefaultTableModel) tCasos.getModel(); //TableProducto es el nombre de mi tabla ;) 
            dtm.removeRow(tCasos.getSelectedRow()); //lo quita de la tabla
            ///ELIMINAR DE LA BD
            System.out.println("codCaso: "+eliminar);
            try {
                eliminado=mCa.eliminarCaso(eliminar);
                if(eliminado==true)
                {
                    System.out.println("Se ha eliminado un Caso. ");
                    JOptionPane.showMessageDialog(null, "Se ha eliminado un Caso. ");
                } 
                else
                {
                    System.out.println("No se ha podido eliminar un nuevo Caso. ");
                    JOptionPane.showMessageDialog(null, "No se ha podido eliminar un nuevo Caso. ");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al eliminar un Caso: "+ex.getMessage());
               // Logger.getLogger(ventanaGestionCompleta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
             JOptionPane.showMessageDialog(null, "No se ha eliminado el Caso. ");
        }
        
        
    }//GEN-LAST:event_EliminarCasoActionPerformed

    private void EliminarColaboracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarColaboracionActionPerformed
        // TODO add your handling code here:
        
        
        int respuesta=JOptionPane.showConfirmDialog(EliminarColaboracion,"¿Esta seguro de que desea eliminar la colaboración?","Eliminar una Colaboración",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(respuesta==0)//SI 
        {
              String EliminarExp=tColaboraciones.getValueAt(tColaboraciones.getSelectedRow(),0).toString();
              String EliminarCaso=tColaboraciones.getValueAt(tColaboraciones.getSelectedRow(),1).toString();
              boolean eliminado;
              DefaultTableModel dtm = (DefaultTableModel) tColaboraciones.getModel(); //TableProducto es el nombre de mi tabla ;) 
              dtm.removeRow(tColaboraciones.getSelectedRow()); //lo quita de la tabla
              ///ELIMINAR DE LA BD
              try {
                  System.out.println("Exp: "+EliminarExp+" Caso: "+EliminarCaso);
                  eliminado=mCo.eliminarColaboracion(EliminarExp,EliminarCaso);
                  if(eliminado==true)
                  {
                      System.out.println("Se ha eliminado una nueva colaboracion. ");
                      JOptionPane.showMessageDialog(null, "Se ha eliminado una nueva colaboracion. ");
                  } 
                  else
                  {
                      System.out.println("No se ha podido eliminar una nueva colaboracion. ");
                      JOptionPane.showMessageDialog(null, "No se ha podido eliminar una nueva colaboracion. ");
                  }

              } catch (SQLException ex) {
                  JOptionPane.showMessageDialog(null, "Error al eliminar una colaboración: "+ex.getMessage());
                 // Logger.getLogger(ventanaGestionCompleta.class.getName()).log(Level.SEVERE, null, ex);
              }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No se ha eliminado la Colaboración. ");
        }
        
        
        
        
    }//GEN-LAST:event_EliminarColaboracionActionPerformed

    private void InsertaColaboracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertaColaboracionActionPerformed
        try {
            
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yy");
            
            Date Fech=txtFechaIncorporacion.getDate();
            String Fecha;
            Fecha=formatter.format(Fech);
            
            String CodExp=tExpertos.getValueAt(tExpertos.getSelectedRow(),0).toString();
            String CodCaso=tCasos.getValueAt(tCasos.getSelectedRow(),0).toString();
            txtCodExpertoColabora.setText(CodExp);
            txtCodCasoColabora.setText(CodCaso);
            
            String Fini= tCasos.getValueAt(tCasos.getSelectedRow(),2).toString();
            try {
                Date a=formatter.parse(Fini);
            } catch (ParseException ex) {
                System.out.println("Excepcion en date a en el parse. ");
                //Logger.getLogger(ventanaGestionCompleta.class.getName()).log(Level.SEVERE, null, ex);
            }
            String FFin= tCasos.getValueAt(tCasos.getSelectedRow(),3).toString();
            try {
                Date b=formatter.parse(FFin);
            } catch (ParseException ex) {
                 System.out.println("Excepcion en date B en el parse. ");
                //Logger.getLogger(ventanaGestionCompleta.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("Fini: "+Fini+" FFin: "+FFin);
            
            /*if()
            {
                 JOptionPane.showMessageDialog(null, "No se ha podido insertar una nueva colaboracion. LA FECHA DE INCORPORACION NO ESTÁ ENTRE LA FECHA INICIAL DE LA FECHA FINAL. ");
            }
            else
            {*/
                

                boolean insertado;

                colabora co=new colabora(CodExp, CodCaso, Fecha, txtDescripcion.getText());
                insertado=mCo.insertaColaboracion(co);
                if(insertado==true)
                {
                    System.out.println("Se ha insertado una nueva colaboracion. ");
                    JOptionPane.showMessageDialog(null, "Se ha insertado una nueva colaboracion. ");
                } 
                else
                {
                    System.out.println("No se ha podido insertar una nueva colaboracion. ");
                    JOptionPane.showMessageDialog(null, "No se ha podido insertar una nueva colaboracion. ");
                }
            //}     
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Insertar una colaboración: "+ex.getMessage());
        }
    }//GEN-LAST:event_InsertaColaboracionActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaGestionCompleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaGestionCompleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaGestionCompleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaGestionCompleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaGestionCompleta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser CalendarioFin;
    private com.toedter.calendar.JDateChooser CalendarioIni;
    private javax.swing.JButton EliminarCaso;
    private javax.swing.JButton EliminarColaboracion;
    private javax.swing.JButton EliminarExperto;
    private javax.swing.JButton InsertaColaboracion;
    private javax.swing.JButton InsertaExperto;
    private javax.swing.JButton InsertarCasoPolicial;
    private javax.swing.JButton LimpiarTodo;
    private javax.swing.JToggleButton ListarTodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tCasos;
    private javax.swing.JTable tColaboraciones;
    private javax.swing.JTable tExpertos;
    private javax.swing.JTextField txtCodCasoColabora;
    private javax.swing.JTextField txtCodExpertoColabora;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCodigoCaso;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtEspecialidad;
    private com.toedter.calendar.JDateChooser txtFechaIncorporacion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreCaso;
    private javax.swing.JTextField txtPais;
    private javax.swing.JTextField txtSexo;
    // End of variables declaration//GEN-END:variables
}
