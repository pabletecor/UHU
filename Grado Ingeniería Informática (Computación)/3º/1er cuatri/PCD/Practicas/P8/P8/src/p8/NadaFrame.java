/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p8;

import java.util.Random;

/**
 *
 * @author usuario
 */
public class NadaFrame extends javax.swing.JFrame {

    /**
     * Creates new form NadaFrame
     */
    public NadaFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {
          
        int alto = 800;
        int ancho = 600;
        NadaFrame nf =  new NadaFrame();
        //Tamaño de la ventana
        nf.setSize(alto, ancho);
    
        Canvas_Nadadores cn = new  Canvas_Nadadores(ancho,alto);
    
        nf.add(cn);
        nf.setVisible(true);
        
        //Declaramos la piscina
        Piscina p = new Piscina(cn);
        
        //Declaramos los nadadores (20). Podria hacer un arraylist
        NadaLibre [] nl = new NadaLibre [20];
        NadaClub [] nc = new NadaClub [20];
        
        
        /*
        Los nadadores llegarán a intervalos de tiempo aleatorio. El hilo correspondiente
        a cada nadador se creará con la llegada del mismo. No se permite que todos los
        hilos se creen al iniciar la práctica. La probabilidad de que llegue un nadador del
        club deberá ser del 90% y de que llegue un nadador libre del 10%
        */
        
         int prob;
        
        for (int i = 0; i < 20; i++) {
            
            Random aleatorio = new Random(System.currentTimeMillis());
            //Esperamos tiempo para crear un nuevo nadador
            Thread.sleep(aleatorio.nextInt(((5))*1000)); 
            //Creamos el nuevo nadador
            prob= aleatorio.nextInt(10);
            
            if(prob < 8){
                 nc[i] = new NadaClub(p,i);
                 nc[i].start();
                 //nc[i].join();
            
            } else {
                
                 nl[i] = new NadaLibre(p,i);
                 nl[i].start();
                 //nl[i].join();
                
                }
        }     
    
         Thread.sleep(10000);
        
        System.exit(0);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
